{"version":3,"sources":["components/home/images/checkmark.svg","components/common/images/destructure-icon.svg","components/home/images/conner-profile.jpg","components/home/images/hawk-profile.jpg","components/home/images/hari-profile.png","components/home/images/zach-profile.jpg","components/home/images/arrow-down.svg","components/common/NavBar.js","components/common/Footer.js","components/home/LinkedList.js","components/home/GuidedLearning.js","components/home/Catalog.js","components/home/Free.js","components/home/Hero.js","components/home/LandingPage.js","components/common/DeviceTooSmall.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","props","toggleSideBar","SubModuleTitle","navBarType","showAbout","setAbout","containerClass","includes","className","to","onClick","Footer","src","require","alt","LinkedList","useState","highlightIndex","setHighlightIndex","Array","map","_","i","nodeClass","key","NUM_NODES","GuidedLearning","Catalog","Free","id","x","y","viewBox","rx","dominantBaseline","textAnchor","r","cx","cy","width","Hero","linkedList","document","getElementById","scrollIntoView","behavior","LandingPage","about","DeviceTooSmall","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.eaa0af85.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/checkmark.86d8c7d7.svg\";","module.exports = __webpack_public_path__ + \"static/media/destructure-icon.931f68c4.svg\";","module.exports = __webpack_public_path__ + \"static/media/conner-profile.23daf376.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hawk-profile.58c97d90.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hari-profile.86e377db.png\";","module.exports = __webpack_public_path__ + \"static/media/zach-profile.f5ec8ba4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/arrow-down.adf5c575.svg\";","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\n/**\n * Required Props:\n * toggleSideBar {function} - Callback for toggling the sidebar\n * SubModuleTitle {String} - Title of current submodule\n * navBarType {String} - String representing which version of the navbar to render\n *    Nav Bar Types: 'summary', 'module', 'homepage', 'catalog', 'sign-in', 'sign-up'\n */\nfunction NavBar(props) {\n  const { toggleSideBar, SubModuleTitle, navBarType, showAbout, setAbout } = props;\n  \n\n  let containerClass = \"nav-bar-container\";\n  if (['homepage', 'catalog', 'sign-in', 'sign-up'].includes(navBarType)) {\n    containerClass += \" homepage-nav-bar\";\n  } else if (navBarType === \"module\") {\n    containerClass += \" module-nav-bar\";\n  }\n\n  const toggleAbout = () => {\n    setAbout(!showAbout);\n  }\n  \n\n  return (\n    <div className={containerClass}>\n      <h1><Link to=\"/\">destructure.io</Link></h1>\n      <div className=\"nav-links-container\">\n        <Link onClick={toggleAbout}>{showAbout ? \"Home\" : \"About\"}</Link>\n      </div>\n    </div>\n  );\n}\n\nexport default NavBar;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n/**\n * Required Props:\n * toggleSideBar {function} - Callback for toggling the sidebar\n * SubModuleTitle {String} - Title of current submodule\n * navBarType {String} - String representing which version of the navbar to render\n *    Nav Bar Types: 'summary', 'module', 'homepage', 'catalog', 'sign-in', 'sign-up'\n */\nfunction Footer() {\n  return (\n    <div className=\"footer-container\">\n      {/* <div className=\"footer-link-container\">\n        <div className=\"footer-company-column\">\n          <h2>destructure.io</h2>\n          <Link to=\"/\">About</Link>\n          <Link to=\"/\">Contact Us</Link>\n        </div>\n        <div className=\"footer-catalog-column\">\n          <h2>Catalog</h2>\n          <div className=\"footer-catalog-links\">\n            <Link to=\"/learn\">Arrays</Link>\n            <Link to=\"/learn\">Nodes</Link>\n            <Link to=\"/learn/linked-list\">Linked Lists</Link>\n            <Link to=\"/learn\">Stacks</Link>\n            <Link to=\"/learn\">Queues</Link>\n            <Link to=\"/learn\">Maps</Link>\n            <Link to=\"/learn\">Trees</Link>\n            <Link to=\"/learn\">Graphs</Link>\n          </div>\n        </div>\n      </div> */}\n      {/* <hr /> */}\n      <div className=\"footer-copyright-container\">\n        <div>\n          <img src={require('./images/destructure-icon.svg')} alt=\"Destructure.io Logo\" />\n        </div>\n        <p>Copyright Â© 2020 destructure.io</p>\n        <div className=\"footer-legal-container\">\n          <Link to=\"/privacy\">Privacy Policy</Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Footer;\n","import React, { Fragment, useState } from 'react';\n\nfunction LinkedList() {\n  const [highlightIndex, setHighlightIndex] = useState(0);\n  const NUM_NODES = 5;\n\n  const prevNode = () => {\n    if (highlightIndex === 0) {\n      setHighlightIndex(NUM_NODES - 1);\n    } else {\n      setHighlightIndex(highlightIndex - 1);\n    }\n  };\n\n  const nextNode = () => {\n    if (highlightIndex === NUM_NODES - 1) {\n      setHighlightIndex(0);\n    } else {\n      setHighlightIndex(highlightIndex + 1);\n    }\n  };\n\n  return (\n    <Fragment>\n      <div className=\"img-container left-image\">\n        <div className=\"linked-list-illustration-container\">\n          {\n            [...Array(NUM_NODES)].map((_, i) => {\n              const nodeClass = i === highlightIndex ? 'linked-list-node linked-list-highlight' : 'linked-list-node';\n              return (\n                <Fragment key={i}>\n                  <div className={nodeClass}>{i + 1}</div>\n                  {i < NUM_NODES - 1 ? <div className=\"linked-list-pointer\" /> : null}\n                </Fragment>\n              );\n            })\n          }\n        </div>\n        <div className=\"linked-list-controls\">\n          <button\n            onClick={prevNode}\n            className=\"hero-btn linked-list-btn\">\n            Prev Node\n          </button>\n          <button\n            onClick={nextNode}\n            className=\"hero-btn linked-list-btn\">\n            Next Node\n          </button>\n        </div>\n      </div>\n      <div className=\"text-container\">\n        <h1>Data structures, visualized.</h1>\n        <p>\n          Develop clear mental models of common computer science data\n          structures using intuitive animations and visualizations.\n        </p>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default LinkedList;\n","import React, { Fragment } from 'react';\n\nfunction GuidedLearning() {\n  return (\n    <Fragment>\n      <div className=\"text-container\">\n        <h1>Guided learning.</h1>\n        <p>\n          Access learning modules that guide you through the process\n          of understanding and working with each data structure.\n        </p>\n      </div>\n      <div className=\"img-container right-image\">\n        <div className=\"progress-row-container\">\n          <div className=\"progress-circle-filled-home\">\n            <img src={require('./images/checkmark.svg')} alt=\"Checkmark Icon\" />\n          </div>\n          <div className=\"progress-line-filled\" />\n        </div>\n        <div className=\"progress-row-container\">\n          <div className=\"progress-circle-filled-home\">\n            <img src={require('./images/checkmark.svg')} alt=\"Checkmark Icon\" />\n          </div>\n          <div className=\"progress-line-filled\" />\n        </div>\n        <div className=\"progress-row-container\">\n          <div className=\"progress-circle-home\" />\n          <div className=\"progress-line\" />\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default GuidedLearning;\n","import React, { Fragment } from 'react';\n\nfunction Catalog() {\n  return (\n    <Fragment>\n      <div className=\"img-container left-image catalog-card-container-homepage\">\n        <div className=\"catalog-card-homepage\">\n          <div className=\"card-circle\" />\n          <h2>Linked Lists</h2>\n        </div>\n        <div className=\"catalog-card-homepage\">\n          <div className=\"card-circle\" />\n          <h2>Arrays</h2>\n        </div>\n        <div className=\"catalog-card-homepage\">\n          <div className=\"card-circle\" />\n          <h2>Stacks</h2>\n        </div>\n        <div className=\"catalog-card-homepage\">\n          <div className=\"card-circle\" />\n          <h2>Queues</h2>\n        </div>\n        <div className=\"catalog-card-homepage\">\n          <div className=\"card-circle\" />\n          <h2>Trees</h2>\n        </div>\n        <div className=\"catalog-card-homepage\">\n          <div className=\"card-circle\" />\n          <h2>Graphs</h2>\n        </div>\n      </div>\n      <div className=\"text-container\">\n        <h1>A growing catalog of content.</h1>\n        <p>\n          We are committed to covering the basics of computer science data\n          structures. You can look forward to modules ranging from Linked\n          Lists to Heaps and everything in between.\n        </p>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default Catalog;\n","import React from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nfunction Free() {\n\n  return (\n    <div id=\"free-card-container\">\n      <div className=\"text-container\">\n        <h1>Free. &nbsp;For everyone.</h1>\n        <p>\n          Destructure.io is a platform created by software engineers who believe quality programming resources\n          should be accessible to anyone, anywhere.\n        </p>\n      </div>\n      <div className=\"img-container right-image\">\n        <svg id=\"free-node-1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 150 100\">\n          <g className=\"node\">\n            <rect x=\"0\" y=\"0\" rx=\"12px\" />\n            <g className=\"node-data-field\">\n              <text x=\"10px\" y=\"55px\">data</text>\n              <text x=\"60px\" y=\"55px\">=</text>\n              <rect x=\"85px\" y=\"39px\" />\n              <rect x=\"85px\" y=\"39px\" />\n              <text className=\"node-data-text\" x=\"110px\" y=\"51px\" dominantBaseline=\"middle\" textAnchor=\"middle\">42</text>\n            </g>\n            <g className=\"node-next-field\">\n              <text x=\"10px\" y=\"82px\">next</text>\n              <text x=\"60px\" y=\"82px\">=</text>\n              <rect x=\"85px\" y=\"66px\" />\n              <g className=\"node-pointer\">\n                <circle r=\"7px\" cx=\"110px\" cy=\"76px\" dominantBaseline=\"middle\" textAnchor=\"middle\" />\n                <rect width=\"0px\" x=\"110px\" y=\"74px\" />\n              </g>\n            </g>\n          </g>\n        </svg>\n        <svg id=\"free-node-2\" x=\"0px\" y=\"0px\" viewBox=\"0 0 150 100\">\n          <g className=\"node\">\n            <rect x=\"0\" y=\"0\" rx=\"12px\" />\n            <g className=\"node-header\">\n              <text x=\"50px\" y=\"20px\">Node</text>\n            </g>\n          </g>\n        </svg>\n      </div>\n    </div >\n  );\n}\n\nexport default Free;\n","import React from 'react';\n\nfunction Hero() {\n\n  const onClickHeroChevron = () => {\n    const linkedList = document.getElementById('linked-list');\n    if (linkedList != null) {\n      linkedList.scrollIntoView({ behavior: 'smooth' });\n    }\n  };\n\n  return (\n    <div className=\"landing-hero-container\">\n      <h1>An interactive visualization platform for learning data structures.</h1>\n      <span id=\"chevron\" className=\"hero-circle\" onClick={onClickHeroChevron}>\n        <img src={require('./images/arrow-down.svg')} alt=\"Arrow Down Icon\" />\n      </span>\n    </div>\n  );\n}\n\nexport default Hero;\n","import {React, useState} from 'react';\nimport NavBar from '../common/NavBar';\nimport Footer from '../common/Footer';\nimport LinkedList from './LinkedList';\nimport GuidedLearning from './GuidedLearning';\nimport Catalog from './Catalog';\nimport Free from './Free';\nimport Team from './Team';\nimport Hero from './Hero';\n\nfunction LandingPage(props) {\n  const [about, setAbout] = useState(false);\n  return (\n    <div>\n      <NavBar navBarType=\"homepage\" showAbout={about} setAbout={setAbout}/>\n      <div>\n        <Hero />\n        <div id=\"linked-list\" className=\"content-container\">\n          <LinkedList />\n        </div>\n        <div id=\"guided-container\" className=\"content-container\">\n          <GuidedLearning />\n        </div>\n        <div id=\"catalog-container\" className=\"content-container\">\n          <Catalog />\n        </div>\n        <div id=\"free-container\" className=\"content-container\">\n          <Free />\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default LandingPage;\n","import React, { useState, useEffect } from 'react';\nimport NavBar from './NavBar';\nimport { Link } from 'react-router-dom';\n\nfunction DeviceTooSmall() {\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n\n  useEffect(() => {\n    window.addEventListener('resize', updateSize);\n    return () => window.removeEventListener('resize', updateSize);\n  }, []);\n\n  useEffect(() => {\n    if (windowWidth > 768) {\n      window.location.reload();\n    }\n  }, [windowWidth]);\n\n  const updateSize = () => {\n    setWindowWidth(window.innerWidth);\n  };\n\n  return (\n    <div>\n      <NavBar navBarType=\"homepage\" />\n      <div className=\"device-too-small\">\n        <h1>Sorry, destructure.io requires a computer.</h1>\n        <p>\n          To properly visualize data structures, we need a larger screen\n          than available on mobile devices. Please visit the application from a computer.\n        </p>\n        <p>\n          <Link to=\"/\">Back to home.</Link>\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default DeviceTooSmall;\n","import React from 'react';\nimport LandingPage from './home/LandingPage';\nimport DeviceTooSmall from './common/DeviceTooSmall';\nimport ScrollToTop from './common/ScrollToTop';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport '../App.css';\n\nfunction App() {\n\n\n  return (\n    <Router>\n      <div className=\"app\">\n          <Route path=\"/\">\n            <LandingPage />\n          </Route>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}